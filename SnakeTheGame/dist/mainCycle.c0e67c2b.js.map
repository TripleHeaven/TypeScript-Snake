{"version":3,"sources":["scripts/classes/Grid.ts","scripts/classes/Drawing.ts","scripts/classes/snakeHead.ts","scripts/classes/InformtationToShow.ts","scripts/classes/Logic.ts","scripts/mainCycle.ts"],"names":[],"mappings":";;;;;;ACEA,ADDA,AGEA,ACCA,AFDA,AGHA,IJEA,ADDA,AGEA,ADAA,AGHA,ILCA,CIGS,CCJT,CJEA,ECCA,AGHA,OAAA,CFGA,ACCA,ACJA,CDIuB,GAAvB,EAA2B,GAA3B,EAA8B,KCJ9B,CAAA;AJEA,ADDA,AGEA,ACEI,AFFJ,EEEI,GAAG,GAAG,IAAI,CAAC,IAAL,CAAU,GAAV,CAAN;AHHJ,ADDA,AGEA,ACGI,AFHJ,AGFA,EDKI,ECLJ,CDKO,GAAG,IHJV,ADDA,AGEA,ACGc,AFHd,CEGe,ACLf,GAAA,EDKU,CAAW,GAAX,CAAN,ACLJ,CAAA,mBAAA,CAAA;AJKI,ADFA,AGEA,ACCA,AFIA,SEJO,EHDP,ADFA,AGEA,ADKA,EEJW,CAAC,CJHZ,CAAY,ECEZ,CAAa,AGCN,CJHP,AIGkB,AFIlB,CAAa,CDLb,ADFwB,ECEC,AGCH,CAAC,EFIvB,CCLA,CAAa,ADKiB,CDL9B,CEAA,ACCkB,CHDmC,CEAxB,EFA7B,ACKA,EDLkF,AGC/C,AFIW,CCL9C,EAA8C,ACCR,EFItC,CEJyC,CFIoB,EEJ3C,CAAX,IAA0C,AFIjD,EAAgF,CEJhF,GFIA,EAA0F;ADJtF,ADFA,AGEA,ACCP,AFIO,AGVR,IAAA,KJKa,ADFA,AGEA,ADKA,ECLL,GAAU,CFAV,ACKA,AGVR,CFKQ,CHFA,CCEc,ACKA,AGVtB,ELGwB,ICEhB,ADFA,AEOA,CGVR,CAAA,qBAAA,CAAA;AJMQ,ADFA,AGEA,ADKA,SDLK,ADFA,AGEA,ADKA,GDLL,CDFA,CGEA,CFAW,ACKX,CFPY,CGEC,CFAb,ADFA,AEOc,CFTM,CAGpB,EGCA,EDKA;ADJA,ADDA,AGCH,ACCL,AFIQ,AGXR,IDOA,ACPA,KJMa,ACKA,IEJb,CFIQ,GAAa,EDLb,GAAkB,ACKlB,EGXR,GAAA,CJMgC,CAAC,KAAP,AIN1B,CAAA,EJMyC,GAAG,CAAC,QAArC,gBINR,CAAA;AJOK,ADDG,AICR,AFKQ,SAAK,OAAL,GAAe,OAAf;ACLJ,ACAJ,AFMQ,AGZR,EFMI,EENJ,KHYa,EGZb,CDMA,CFMQ,CGZR,EHYoB,GCNhB,CAAA,ADMI,CGZR,CAAA,OFMI,CAAA,SENJ,CAAA,EFMI,AELJ,GFKI,UAAa,KAAb,EAA6B,GAA7B,EAA2C,GAA3C,EAAyD,OAAzD,EAAyE;AFCzE,ADDI,AGCA,ACGJ,AFGI,EDNJ,OAAA,ADDS,AEOA,CDNT,CGGA,EJJa,AEOT,CFPU,AEOA,GFPG,CAAb,AEOA,CDNJ,ACMmB,CDNnB,ADDqB,AIIrB,CJJsB,AIIV,EAAZ,CHHA,ADDyB,AEOD,CEHG,EHH3B,EDD8B,AII9B,CFGI,CEHiC,CFGL,KDN3B,ADDD,AEOiC,EFPG,CCCxC,ADDyC,ECC1B,ADDX,CEOA,CFPwC,CEOC,KAAzC,GAAiD,CAAjD;ADLA,ADDI,AGCA,ACGJ,AFIH,QCPW,CCGH,EJJI,AIIT,GAAU,CJJN,CAAU,AIId,CJJI,IAAgB,EAAhB,AGCmB,GAAG,QAAQ,CAAC,cAAT,CAAwB,KAAxB,CAAtB;AFCJ,AEAI,ACGJ,ACVR,IAAM,IFOU,CFAH,AGGA,CCVD,EJOJ,CAAS,AGGT,ACVO,GDUK,IAAZ,CDHqB,AEPN,CJOf,AIPgB,CJOG,CAAnB,AEAwB,EFAH,CAArB,EAAyB,GEAO,CAAC,CFAH,EIPvB,CAAwB,GJON,CAAY,KAArC,CEAwB,CFAmB,AEAK,AEPzC,CAAf,EFOgC,CAApB,CFA4C,MAAL,CAAY,MAAvD,EAFW,CAGX;ADFI,AGEA,ACGJ,AFGJ,AGbJ,EHaI,IGbE,CAAC,CFOS,CCGH,EJLI,AEQb,CAAA,EEHI,CJLa,CAAC,CIKD,CAAb,CJLiB,CAAb,CGEiB,ADMzB,CFRyB,AEQzB,CFR0B,AKL9B,CFOgC,AEPR,ELKS,AEQ7B,GAAA,EFRkC,AKLtC,CFOwC,CAAC,AEPR,MLKrB,EAAoC,AEQ5C,CFR6C,CKLf,CLKtB,AKLqB,ELKmB,AKLX,CFOT,CAAwB,GAAxB,CAApB;AFCJ,ADFQ,AGEJ,ACGP,AFGG,AGdsC,QJQlC,AEAI,CER8B,GHc9B,CFRK,CKN8B,EAAL,CLM9B,AEQK,CDNC,ADFI,CAAV,ECES,ADFI,CAAb,EEQR,CCNyB,CFAH,ADFI,EGEE,IFAX,CAAY,GEAO,CAAC,CFApB,GAAoB,KAAK,KEAd,CAAwB,IFApD,GEA4B,CAAxB;AFCJ,ADH2B,AGGvB,ADMA,AGfyC,CAArD,GFSY,IFAA,EDHuB,CAAC,AESnB,EFTsB,CAAL,ECGd,CCMR,EDNW,AEAI,CFAnB,AEAoB,SAAhB,GAA4B,KAAK,EAAL,CAAQ,OAApC;AFCJ,ADJiC,AGI7B,ACER,AFIY,EEJZ,EDFQ,IFAA,EDJ6B,CAAC,AIMtC,CAAA,CJNyC,AEUxB,CFVa,ECId,CEAK,CAAC,CFAH,ACMP,CDNR,CGEJ,CAAA,AFI0B,CAAd,ICNJ,GAA0B,ICElC,CDFuC,EAAL,ACElC,CDF0C,MAAR,CAAe,ICEjD,IDFkC,EAA1B;AHJmC,AGKnC,ACEJ,AFIQ,AGhBhB,IFUY,KCEC,ACZJ,CLKsC,GIO9B,AFII,CGhBrB,CLKoD,AIOjC,EJPoC,AGK9B,AEVX,CFUY,ACEJ,CAAd,AFIQ,EEJU,CFII,CEJF,AFIG,CAAf,EEJe,CDFnB,GAA0B,CCEF,IDFO,ACEZ,CAAU,CDFH,CAAQ,MAAR,ACE9B,CDF6C,CCEF,EAAE,EAA7C,EAAgD,CDFlB,EAA1B;AFAJ,ADL0B,AGMtB,ACEA,AFIE,AGhBd,IFUY,EEVR,EAAE,CJSO,ADLG,EIQC,ACZR,EJSQ,EAAE,AGGE,EAAE,CHHD,CAAd,AITS,CDYS,ACZR,CJSQ,AECG,ACEjB,CDFkB,CFDF,AGGE,EAAE,CHHD,EGGI,CHHD,CAAC,CECvB,ECE4B,CDFE,AEVjC,CAAwB,EDYE,CHH3B,AGGqC,CDFE,CFDF,EAAE,EAAvC,AECkC,CAAW,CFDH,AGGtC,CCZH,CDY8C,ACZvD,EFU0C,ACEe,CDFE,CCE/C,EAAiD,KDFnB,EAA9B;AFAA,ADLI,AGMX,ACEW,ACZhB,GFAI,GEAA,GAAG,EJSU,CITP,CLIW,CKJT,CJSS,AITR,EJSU,ADLP,CAAU,CAAV,CCKU,CAAd,ADLiB,CAAb,CCKc,CDLE,CCKA,ADLhB,AKJN,CAAc,EJSW,ADLC,CAApB,CKJN,CJS4B,AITtC,CJSuC,QAA3B,EAAqC,EAAE,EAAvC,EAA2C;AACvC,ADLA,AIQA,AFGJ,AGfZ,MAAI,IAAI,CHeS,EFXI,AKJV,EHeC,EFXI,AKJD,CLIW,CAAV,EAAa,CAAb,CKJD,CLIiB,AKJjB,CLIC,GAAoB,AKJzB,CLIK,AKJI,EAAT,CAAX;AJUgB,ADLA,AGKhB,ACGgB,AFGA,AGfhB,MAAI,GFSJ,GCGoB,CJRC,AEWA,AGfV,GJSa,AITV,CLIE,AIQS,CJRC,CCKC,ADLX,AEWA,CDNY,AITV,CLIW,AIQT,CJRJ,AIQc,AFGA,CAAC,CDNP,ADLQ,AEWhB,CDNiB,CEAjC,ACGoB,CHHI,AGGW,EHHE,ADLrB,AIQI,ACZF,CAAA,CJSM,AGGe,CJRC,CCKC,ADLzB,AIQI,EAAuB,ECZ7B,CJSE,AITU,EDYN,ECZN,EDYsC,ACZrB,CDYX,CCZN,EAAqB,CDYsB,ECZ3C,CAAd,EDY8D,EAAL,CAAQ,MAAR,GAAgB,KAAK,EAAL,CAAQ,MAAxB,IAAiC,EAAtE,IAA4E,KAAK,EAAL,CAAQ,MAAR,GAAiB,KAAK,EAAL,CAAQ,MAAzB,IAAkC,EAAlH,EAAqH;AHFjH,ADLP,AGdb,ACsBoB,AFGJ,AGfhB,CFVA,EAAA,GEUI,MAAM,CHeW,EDNI,AGGA,ACZZ,CJSO,GCMJ,AGfC,CDYG,EFGU,CEHG,AFGjB,KEHsB,ECZrB,CAAA,EDYgB,GAAa,CAA1B,GCZP,CAAc,CAAd,EAAgB,CAAhB,EAAkB,CAAlB,EAAoB,OAApB,EAA4B,IAA5B,CAAb;AJUwB,ADLf,AIQW,AFGN,AGfd,MAAI,KAAK,GAAG,CDYa,GCZT,CDYI,CAAU,IAAV,CAAe,ACZnB,CAAA,CDYI,EAAmB,EAAnB,EAAuB,ECZ/B,CAAc,EDYN,IAAgC,ACZxC,CDYQ,CCZa,IAArB,CAAZ;AJUwB,ADLnB,AGjBG,ACyBS,ACZjB,MAAI,CFbI,CAAA,MEaI,GJSiB,AITd,GJSS,CAAS,AITd,IFbX,GAAA,EFsBgB,WITL,CAAA,GFbX,cEaO,CAAuB,MAAvB,EAA+B,KAA/B,CAAf;AJUwB,AGGX,AFED,AGZZ,EAAA,QAAQ,CHYS,AGZR,MJOoB,CCKjB,EDLY,CAAS,IAAT,CAAc,CIPtC,CAA0B,MJOF,EAAwB,CIPhD,EAAqC,KJOb,EAAkC,KAAK,EIP/D,EAAqD,KAArD,CJOwB,CIjBV,CJiB6D,AIN3E,KJMgF,UAAxD,EAHJ,CAIG;AACA,ADNvB,AIQS,AFEO,SFVhB,IAAA,AEUqB,MAAL,GAAc,CAAd;AF9BhB,AI6BK,AFEW,AGXhB,CLpBA,EAAA,AIkBI,CATJ,CAqBI,MCVK,EHWY,MAAL,GAAc,CAAd,EGXhB,CAAwB,CAAxB,EAAyB;AJOF,ACKT,AGXV,QAAG,CAAC,CAAC,GAAF,IJMqB,AINZ,GJMO,CAAS,GINzB,GJMgB,CINI,CAAC,CJAR,AIAS,CJON,EIPI,IAAS,YAAhC,EAA8C;ALtB1C,AKuBA,MAAA,CLvBA,CAAA,IAAA,AKuBM,CAAC,ELvBP,IAAA,CKuBA,GAAiB,OAAjB;AJOc,AGElB,AFEQ,AGVP,EDQD,GCVA,MDUA,AFEa,AGTR,CDOL,GCPQ,CAAC,CHSD,AGTE,GAAF,CDOR,CAAA,ECPiB,MAAT,EDOR,ECP2B,CDO3B,ACP4B,CAAC,GAAF,IAAS,IDOpC,OCPK,EAA4C;ADQ7C,AFEQ,AGTR,MAAA,MAAM,CHSO,AGTN,MHSC,CGTR,EHSsB,CAAd,AGTS,MAAjB;AJKY,AGGZ,AFEQ,AGTX,KAFI,GDSG,GCNH,CDMO,CFEK,EDLI,AGGL,ACNP,CJGO,AIHN,CAAC,EHQC,CGRH,EHQiB,CAAd,CGRM,GDMU,CAAC,CAAD,CCNnB,CDMsB,GCNH,CAAC,CDMO,ACNN,GAAF,CDMG,CAAU,ECNJ,MDMN,GAAqB,CAAxB,CAAxB,ACNC,EAA4C;AJI7B,AGGhB,AFdA,AGQA,MAAA,EDMI,IAAI,ACNF,CAAC,EDMI,EHHU,GAAL,AIHhB,CJGyB,EIHR,IDMM,CAAC,CAAD,ACNvB,CJGgB,CGGU,KAAK,IAAL,CAAU,QAAV,GAAqB,CAAxB,CAAvB,CAHJ,CAII;AHHgB,AIHnB,KAFI,MAGA,IAAI,CAAC,CJEe,AIFd,GJES,AIFX,CJEoB,GIFX,CJEE,CAAc,EIFzB,IAAiB,CAAC,CJEP,AIFQ,EJEgB,CIFlB,IAAS,GJEf,EAAkC,IIFjD,CJEsD,CIFd,SJEzB,EAAmD,KAAK,UAAxD;AACA,AGGhB,AFCA,AGNA,MAAA,EHMI,IGNE,CHMG,AGNF,IJEc,ECIjB,CDJY,AIFhB,CJEyB,CCIP,CGND,IHMM,AGNvB,GJEgB,GAAqB,ACIjC,GAA4B,KAAK,CDJrB,GCIgB,CAAU,QAAV,GAAqB,CAArD,EAAuD;ADHvC,ACId,AGNL,WHMU,IAAL,CAAU,CDJS,GAAL,ACId,CDJuB,ACIR,IDJD,CCIM,MAApB,EAA4B,KAAK,MAAjC,EAAyC,KAAzC,GAAiD,CAAjD;ADHa,ACIb,AGNT,WHMc,IAAL,CAAU,CDJQ,GAAL,ACIb,CDJsB,ACIP,CAAf,EAAkB,GDJL,ECIU,MAAL,GAAY,KAAK,MAAnC,EAA2C,KAA3C,GAAmD,CAAnD;ADHa,ACIb,AGLV,WHKe,MDJa,ACIlB,GDJa,ACIC,CDJQ,ACItB,SDJa;AAED,AGEV,AFCH,KAJD,IEGS,EFEJ,EEFD,CAAU,CFEL,GEFL,CAAe,CFEL,GEFV,EAAqB,CFEhB,GEFL,AFEmB,EEFQ,GFEH,EEFxB,GAAmC,CAAnC,AFEK,GAA4B,KAAK,IAAL,CAAU,QAAV,GAAqB,CAArD,EAAuD;AEA/D,AFCK,GEZN,QFYW,IAAL,CAAU,IAAV,CAAe,KAAK,MAApB,EAA4B,KAAK,MAAjC,EAAyC,KAAzC,GAAiD,CAAjD;ADJU,ACKV,WAAK,IDLU,ACKf,CDLU,ACKA,IAAV,CAAe,KAAK,MAAL,GAAY,KAAK,MAAhC,EAAwC,CAAxC,EAA2C,KAA3C,GAAmD,CAAnD;ADJc,AGGxB,AFEU,SEFV,EFEe,MDLc,ACKnB,CEFV,EHHwB,ACKA,CDLS,ACKvB,SDLc;AACA,AGhCxB,AFqCS,CErCT,EAAA,EFiCa,MAKA,IAAI,EDNY,GAAL,ACMF,CDNW,IAAT,CAAc,ACMrB,GAAc,KDNP,ACMY,EDNW,ICM9B,GAA4B,CDNrB,ACMX,EDN4C,ACMV,KDNe,UAAtC,EAAiD,KAAK,UAAtD;AACA,ACMd,WAAK,IAAL,CAAU,CDNS,GAAL,ACMd,CDNuB,ACMR,KAAK,IDNN,ECMd,CDNmC,CCMP,KAAK,GDNnB,GCMd,EAAyC,KAAzC,GAAiD,CAAjD;ADLc,AG1ChB,AFgDE,OEhDF,CAAA,GFgDO,IAAL,CAAU,CDNS,AG1CrB,GH0CgB,AG1ChB,AFgDE,CDNuB,ACMR,IDND,CCMM,GEhDtB,CFgDiB,CAAU,QAAV,GAAoB,CAAnC,EAAsC,KAAK,MAA3C,EAAmD,KAAnD,GAA2D,CAA3D;ADLc,ACMd,WAAK,MDNc,ACMnB,GDNc,ACMA,CDNS,ICMJ,EDNL,ECMA,CAAU,QAAV,GAAoB,CAAlC;ADLc,ACMf,KAJI,MAKA,IAAI,EDPY,GAAL,ACOF,CDPW,KCOhB,GAAc,CDPP,ICOY,MAAnB,GAA4B,CAAhC,EAAkC;ADNvB,ACOd,WAAK,IAAL,CAAU,IAAV,CAAe,KAAK,MAApB,EAA4B,KAAK,MAAjC,EAAyC,KAAzC,GAAiD,CAAjD;AACA,WAAK,IAAL,CAAU,IAAV,CAAe,KAAK,MAApB,EAA4B,KAAK,IAAL,CAAU,QAAV,GAAqB,CAAjD,EAAoD,KAApD,GAA4D,CAA5D;ADPU,ACQV,WAAK,IDRU,CAAL,CCQV,GAAc,KAAK,IAAL,CAAU,QAAV,GAAqB,CAAnC;ADPY,ACQb,KAJI,MAKD,CDTU,KAAK,CAAE,SAAF,CAAL;AACA,ACSd,AGVR,EAAA,OAAO,CAAC,CHUK,GGVb,CHUQ,AGVK,CHUK,GGVlB,CHUQ,CAAe,KAAK,MAApB,EAA4B,KAAK,MAAjC,EAAyC,KAAzC,GAAiD,CAAjD;AACA,AGVJ,EAAA,SHUS,EGVE,CAAE,CHUT,CAAU,IAAV,CAAe,KAAK,AGVX,MHUM,GAAc,KAAK,MAAlC,EAA0C,KAAK,MAAL,GAAc,KAAK,MAA7D,EAAqE,KAArE,GAA6E,CAA7E;ADTY,ACUZ,AGXsB,IAAA,OHWjB,AGXwB,CAAC,IAAR,CHWtB,AGXmC,IHWtB,AGXS,GAAqB,EHWzB,MAAlB,AGXmD,CAAC,YAAT,CAAsB,SAAtB,EAAgC,aAAhC,EAA8C,aAA9C,EAA4D,WAA5D,CAArB,EAA+F,KAAK,CAAC,YAAN,EAA/F,EAAoH,MAAM,CAAC,IAAP,EAApH;AJER,ACUd,AGZwJ,GAAjJ,EAAmJ,GAAnJ,CAAX,EHYS,CDVS,KAAK,ACUnB,CDVqB,GCUR,KAAK,MAAlB,MDVmB,CAAL;AA/BN,AC0CP,AGZL,EAAA,WAAW,CAAC,YAAA;AHeX,AGfsB,GH/BvB,CG+BuB,KAAK,CAAC,UAAN;AJGT,AIH4B,GAA/B,EAAiC,GJG9B,CIHH,CAAX,MJGsB,IAAG,KAAK,UAAhB;AACL,ACab,AGhBC,SHgBD,SAAA;AAjEA,CAAA,EAAA;ADqDY,AIHZ,MJGY,GIHH,EAAT,GJGoB,AIHT,IJGa,KAAK,UAAjB;AACA,ACvDJ,AGoDJ,EAAA,IJGQ,CCvDJ,AGoDC,CHpDD,AGoDE,MJGU,CIHX,CAAL,CJGmB,ACvDf,CDuDI,ECvDJ,SAAA;ADwDC,AIHR;AJKI,GAjDD;;AAkDJ,SAAA,OAAA;AA3DA,CAAA,EAAA;;AADQ,OAAA,CAAA,OAAA,GAAA,OAAA","file":"mainCycle.c0e67c2b.js","sourceRoot":"..","sourcesContent":["export {Grid};\nclass Grid{\n    grid : Array<object>;\n    gridsize: number;\n    constructor(size: number){\n        this.gridsize = size;\n        this.grid = [];\n        // Making a grid from size\n        // Grid structure : 0 - x 1 - y 2 - state\n        // State : 0 - none 1 - headsnake 2 - snakepart 3 - apple 4 - bonusApple\n        for (let x = 0 ; x < this.gridsize; x++){\n            this.grid[x] =  [];\n            for (let y = 0 ; y < this.gridsize; y++){\n                this.grid[x][y] = {x : 0,y : 0,state : 0};\n                this.grid[x][y].x = x;\n                this.grid[x][y].y = y;\n                this.grid[x][y].state = 0;\n            }\n        }\n    }\n\n}","import {Grid} from \"./Grid\";\nexport {Drawing};\nclass Drawing{\n    canvas: HTMLCanvasElement;\n    ctx: CanvasRenderingContext2D;\n    squareSize : number;\n    constructor (obj : Grid, canvas : HTMLCanvasElement, ctx: CanvasRenderingContext2D){\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.squareSize = canvas.width / obj.gridsize;\n    }\n    Draw(obj : Grid){\n        // clearing the canvas\n        this.ctx.clearRect(0,0 , this.canvas.width,this.canvas.height)\n        // quantity of squares according to px size and canvas width\n        let brickCount = this.canvas.width / this.squareSize;\n        let currentX = 0 ;\n        let currentY = 0 ;\n        for (let ix = 0 ; ix < obj.gridsize; ix++){\n            for (let iy = 0 ; iy < obj.gridsize; iy ++){\n                // 0 - field 1 - headsnake 2 - snakepart 3 - apple 4 - bonusApple\n                switch (obj.grid[ix][iy].state) {\n                    case 0:\n                        //drawing Field\n                        this.ctx.beginPath();\n                        this.ctx.rect(currentX, currentY, this.squareSize, this.squareSize);\n                       // this.ctx.fillStyle = \"#0095DD\";\n                       // this.ctx.fill();\n                       this.ctx.stroke();\n                       // this.ctx.closePath();\n                      break;\n                    case 1:\n                        this.ctx.beginPath();\n                        this.ctx.rect(currentX, currentY, this.squareSize, this.squareSize);\n                        this.ctx.fillStyle = \"#0095DD\";\n                        this.ctx.fill();\n                       this.ctx.stroke();\n                       this.ctx.closePath();\n                       \n                      break;\n                    case 3:\n                        this.ctx.beginPath();\n                        this.ctx.rect(currentX,currentY, this.squareSize,this.squareSize);\n                        this.ctx.fillStyle = \"#EF2020\";\n                        this.ctx.fill();\n                        this.ctx.stroke();\n                        this.ctx.closePath();\n                        break;\n                    case 5:\n                      alert( 'Перебор' );\n                      break;\n                    default:\n                      alert( \"Нет таких значений\" );\n                  }\n                  currentX +=this.squareSize;\n            }\n            currentY += this.squareSize;\n            currentX = 0;\n        }\n        \n    }\n}","import {Grid} from \"./Grid\";\nimport { start } from \"repl\";\nexport {SnakeHead};\nclass SnakeHead{\n    grid : Grid;\n    startX : number;\n    startY : number;\n    speed : number;\n    forward : string;\n    speedX : number;\n    speedY : number;\n    constructor (startX : number, startY: number, speed:number , forward : string , grid: Grid){\n        this.startX = startX;\n        this.startY = startY;\n        this.speed = speed;\n        this.forward = forward;\n        this.grid = grid;\n        this.grid.grid[this.startX][this.startY].state = 1;\n        \n    }\n    move (){\n        switch (this.forward) {\n            case \"left\":\n                this.speedX = 0;\n                this.speedY = -1;\n              break;\n            case \"up\":\n                this.speedX = -1;\n                this.speedY = 0;\n              break;\n            case \"right\":\n                this.speedX = 0;\n                this.speedY = 1;\n              break;\n            case \"down\":\n                this.speedX = 1;\n                this.speedY = 0;\n          }   \n        if (this.startX + this.speedX > this.grid.gridsize - 1){\n          this.grid.grid[this.startX][this.startY].state = 0;\n          this.grid.grid[0][this.startY+this.speedY].state = 1;\n          this.startX = 0;\n        }\n        else if (this.startY + this.speedY > this.grid.gridsize - 1){\n          this.grid.grid[this.startX][this.startY].state = 0;\n          this.grid.grid[this.startX+this.speedX][0].state = 1;\n          this.startY = 0;\n        }\n        else if (this.startX + this.speedX < 0){\n          this.grid.grid[this.startX][this.startY].state = 0;\n          this.grid.grid[this.grid.gridsize -1][this.startY].state = 1;\n          this.startX = this.grid.gridsize -1 ;\n        }\n        else if (this.startY + this.speedY < 0){\n          this.grid.grid[this.startX][this.startY].state = 0;\n          this.grid.grid[this.startX][this.grid.gridsize - 1].state = 1;\n          this.startY = this.grid.gridsize - 1;\n        }        \n        else{\n        this.grid.grid[this.startX][this.startY].state = 0;\n        this.grid.grid[this.startX + this.speedX][this.startY + this.speedY].state = 1;\n        this.startX+=this.speedX;\n        this.startY+=this.speedY\n        }\n\n        \n    }\n\n}","import { SnakeHead } from \"./snakeHead\";\nimport { GameLogic } from \"./Logic\";\nexport {InformationToShow}\nclass InformationToShow{\n    sh:SnakeHead;\n    logic : GameLogic;\n    constructor (sh : SnakeHead, logic : GameLogic){\n        this.sh = sh;\n        this.logic = logic;\n    }\n    showMainInfo(idDir : string ,idX : string, idY : string, idScore : string){\n        // shows current direction on the screen \n            let outsidelabelDir = document.getElementById(idDir);\n            let outsidelabelX = document.getElementById(idX);\n            let outsidelabelY = document.getElementById(idY);   \n            let outsidelabelScore = document.getElementById(idScore);         \n            outsidelabelDir.innerHTML = this.sh.forward; \n            outsidelabelX.innerHTML = this.sh.startX.toString();\n            outsidelabelY.innerHTML = this.sh.startY.toString();\n            outsidelabelScore.innerHTML = this.logic.score.toString();\n    }\n}","import {SnakeHead} from \"./snakeHead\";\nimport {Grid} from \"./Grid\";\nexport {GameLogic};\n\nfunction getRandomInt (min,max) : number{\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nclass GameLogic{\n    sh: SnakeHead;\n    grid:  Grid;\n    score: number;\n    constructor(sh: SnakeHead, grid: Grid){\n        this.sh = sh;\n        this.grid = grid;    \n        this.score = 0; \n    }\n    eventChecker(){\n        for (let ix = 0 ; ix < this.grid.gridsize; ix++){\n            for (let iy = 0 ; iy < this.grid.gridsize; iy ++){\n                // 0 - field 1 - headsnake 2 - snakepart 3 - apple 4 - bonusApple\n                // checking if apple is there and snakeHead is there\n                if (this.grid.grid[ix][iy].state == 3 && this.sh.startX+ this.sh.speedX== ix && this.sh.startY + this.sh.speedY== iy){\n                    this.score = this.score + 1;\n                    this.grid.grid[ix][iy].state == 0;\n                }\n            }\n        }        \n    }\n    // spawning an apple in a random place\n    spawnApple(){\n        // generating random place to spawn\n        let rndX  = getRandomInt(0,this.grid.gridsize - 1);\n        let rndY = getRandomInt(0,this.grid.gridsize - 1);\n        //checking if head is here\n        /*if (this.grid.grid[rndX][rndY].state == 1){\n            this.spawnApple();\n        }*/\n        \n            this.grid.grid[rndX][rndY].state = 3;\n        \n    }\n}","import {Grid} from \"./classes/Grid\";\nimport {Drawing} from \"./classes/Drawing\";\nimport {SnakeHead} from \"./classes/snakeHead\";\nimport {InformationToShow} from \"./classes/InformtationToShow\";\nimport {GameLogic} from \"./classes/Logic\";\n//initializing things\nconst button = document.getElementById(\"my_button\");\nbutton.addEventListener(\"click\", (e:Event) => start());\nfunction start(){\nlet cs = document.getElementById(\"gamewindow\") as HTMLCanvasElement;\nlet csx = cs.getContext(\"2d\") as CanvasRenderingContext2D;\nlet grid = new Grid(15);\nlet drawing = new Drawing(grid,cs, csx);\nlet snakeH = new SnakeHead(0,0,1,\"right\",grid);\nlet logic = new GameLogic(snakeH,grid);\nlet infoShow = new InformationToShow (snakeH, logic);\n\n\ndocument.addEventListener(\"keydown\", keyDownHandler, false);\n//document.addEventListener(\"keyup\", keyUpHandler, false);\n\nfunction keyDownHandler(e) {\n    if(e.key == \"Right\" || e.key == \"ArrowRight\") {\n        snakeH.forward = \"right\";\n    }\n    else if(e.key == \"Left\" || e.key == \"ArrowLeft\") {\n        snakeH.forward = \"left\";\n    }\n    else if (e.key == \"Down\" || e.key == \"ArrowDown\"){\n        snakeH.forward = \"down\";\n    }\n    else if (e.key == \"Up\" || e.key == \"ArrowUp\"){\n        snakeH.forward = \"up\";\n    }\n}\n\n/*function keyUpHandler(e) {\n    if(e.key == \"Right\" || e.key == \"ArrowRight\") {\n        rightPressed = false;\n    }\n    else if(e.key == \"Left\" || e.key == \"ArrowLeft\") {\n        leftPressed = false;\n    }\n    else if (e.key == \"Down\" || e.key == \"ArrowDown\"){\n        downPressed = false;\n    }\n}\n*/\n\ndrawing.Draw(grid);\n    setInterval( function() { drawing.Draw(grid),  infoShow.showMainInfo(\"dirShow\",\"xcoordinate\",\"ycoordinate\",\"scoreShow\"), logic.eventChecker(),snakeH.move()}, 200);\n    setInterval(function(){logic.spawnApple()} ,5000 );\n}\nfunction go(){\n    alert(\"hello\");\n}\n\n\n"]}